// Place your key bindings in this file to override the defaultsauto[]
[
    {
        "key": "ctrl+pageup",
        "command": "workbench.action.previousEditor",
    },
    {
        "key": "ctrl+pagedown",
        "command": "workbench.action.nextEditor",
    },
    {
        "key": "ctrl+n",
        "command": "-workbench.action.files.newUntitledFile"
    },
    {
        "key": "ctrl+alt+n",
        "command": "-extension.advancedNewFile"
    },
    {
        "key": ".",
        "command": ""
    },
    {
        "key": "ctrl+a",
        "command": "workbench.action.terminal.selectAll",
        "when": "terminalFocus"
    },
    {
        "key": "alt+l alt+o",
        "command": "-extension.liveServer.goOnline",
        "when": "editorTextFocus"
    },
    {
        "key": "ctrl+alt+b",
        "command": "editor.emmet.action.balanceOut"
    },
    {
        "key": "ctrl+alt+v",
        "command": "editor.emmet.action.balanceIn"
    },
    {
        "key": "ctrl+n",
        "command": "workbench.action.terminal.toggleTerminal",
        "when": "terminal.active"
    },
    {
        "key": "ctrl+oem_3",
        "command": "-workbench.action.terminal.toggleTerminal",
        "when": "terminal.active"
    },
    {
        "key": "ctrl+shift+n",
        "command": "terminalHere.create"
    },
    {
        "key": "ctrl+q",
        "command": "workbench.action.terminal.kill"
    },
    {
        "command": "acceptSelectedSuggestion",
        "key": "enter",
        "when": "suggestWidgetVisible && textInputFocus"
    },
    {
        "key": "ctrl+f4",
        "command": "-workbench.action.closeActiveEditor"
    },
    {
        "key": "ctrl+f4",
        "command": "workbench.action.closeEditorsToTheRight"
    },
    {
        "key": "ctrl+shift+w",
        "command": "-workbench.action.closeWindow"
    },
    {
        "key": "ctrl+shift+w",
        "command": "workbench.action.closeOtherEditors"
    },
    {
        "key": "alt+f12",
        "command": "editor.action.peekDefinition",
        "when": "editorHasDefinitionProvider && editorTextFocus && !inReferenceSearchEditor && !isInEmbeddedEditor"
    },
    {
        "key": "ctrl+shift+f10",
        "command": "-editor.action.peekDefinition",
        "when": "editorHasDefinitionProvider && editorTextFocus && !inReferenceSearchEditor && !isInEmbeddedEditor"
    },
    {
        "key": "alt+i",
        "command": "notebook.focusPreviousEditor",
        "when": "config.notebook.navigation.allowNavigateToSurroundingCells && editorTextFocus && inputFocus && notebookEditorFocused && notebookEditorCursorAtBoundary != 'bottom' && notebookEditorCursorAtBoundary != 'none'"
    },
    {
        "key": "alt+i",
        "command": "notebook.focusPreviousEditor",
        "when": "config.notebook.navigation.allowNavigateToSurroundingCells && notebookCursorNavigationMode && notebookEditorFocused && !notebookCellMarkdownEditMode && notebookCellType == 'markup'"
    },
    {
        "key": "up",
        "command": "-notebook.focusPreviousEditor",
        "when": "config.notebook.navigation.allowNavigateToSurroundingCells && notebookCursorNavigationMode && notebookEditorFocused && !notebookCellMarkdownEditMode && notebookCellType == 'markup'"
    },
    {
        "key": "alt+i",
        "command": "cursorUp",
        "when": "textInputFocus"
    },
    {
        "key": "up",
        "command": "-cursorUp",
        "when": "textInputFocus"
    },
    {
        "key": "alt+i",
        "command": "history.showPrevious",
        "when": "historyNavigationBackwardsEnabled && historyNavigationWidgetFocus && !suggestWidgetVisible"
    },
    {
        "key": "up",
        "command": "-history.showPrevious",
        "when": "historyNavigationBackwardsEnabled && historyNavigationWidgetFocus && !suggestWidgetVisible"
    },
    {
        "key": "alt+i",
        "command": "interactiveEditor.arrowOutUp",
        "when": "interactiveEditorFocused && interactiveEditorHasProvider && interactiveEditorInnerCursorFirst"
    },
    {
        "key": "up",
        "command": "-interactiveEditor.arrowOutUp",
        "when": "interactiveEditorFocused && interactiveEditorHasProvider && interactiveEditorInnerCursorFirst"
    },
    {
        "key": "alt+i",
        "command": "list.focusUp",
        "when": "listFocus && !inputFocus"
    },
    {
        "key": "up",
        "command": "-list.focusUp",
        "when": "listFocus && !inputFocus"
    },
    {
        "key": "alt+i",
        "command": "scm.viewPreviousCommit",
        "when": "scmInputIsInFirstPosition && scmRepository && !suggestWidgetVisible"
    },
    {
        "key": "up",
        "command": "-scm.viewPreviousCommit",
        "when": "scmInputIsInFirstPosition && scmRepository && !suggestWidgetVisible"
    },
    {
        "key": "alt+i",
        "command": "selectPrevSuggestion",
        "when": "suggestWidgetMultipleSuggestions && suggestWidgetVisible && textInputFocus || suggestWidgetVisible && textInputFocus && !suggestWidgetHasFocusedSuggestion"
    },
    {
        "key": "up",
        "command": "-selectPrevSuggestion",
        "when": "suggestWidgetMultipleSuggestions && suggestWidgetVisible && textInputFocus || suggestWidgetVisible && textInputFocus && !suggestWidgetHasFocusedSuggestion"
    },
    {
        "key": "alt+i",
        "command": "workbench.action.interactivePlayground.arrowUp",
        "when": "interactivePlaygroundFocus && !editorTextFocus"
    },
    {
        "key": "up",
        "command": "-workbench.action.interactivePlayground.arrowUp",
        "when": "interactivePlaygroundFocus && !editorTextFocus"
    },
    {
        "key": "alt+i",
        "command": "workbench.banner.focusPreviousAction",
        "when": "bannerFocused"
    },
    {
        "key": "up",
        "command": "-workbench.banner.focusPreviousAction",
        "when": "bannerFocused"
    },
    {
        "key": "alt+i",
        "command": "workbench.statusBar.focusPrevious",
        "when": "statusBarFocused"
    },
    {
        "key": "up",
        "command": "-workbench.statusBar.focusPrevious",
        "when": "statusBarFocused"
    },
    {
        "key": "alt+j",
        "command": "notebook.fold",
        "when": "notebookEditorFocused && !inputFocus && activeEditor == 'workbench.editor.notebook'"
    },
    {
        "key": "left",
        "command": "-notebook.fold",
        "when": "notebookEditorFocused && !inputFocus && activeEditor == 'workbench.editor.notebook'"
    },
    {
        "key": "left",
        "command": "notebook.fold",
        "when": "notebookEditorFocused && !inputFocus && activeEditor == 'workbench.editor.notebook'"
    },
    {
        "key": "up",
        "command": "notebook.focusPreviousEditor",
        "when": "config.notebook.navigation.allowNavigateToSurroundingCells && notebookCursorNavigationMode && notebookEditorFocused && !notebookCellMarkdownEditMode && notebookCellType == 'markup'"
    },
    {
        "key": "up",
        "command": "notebook.focusPreviousEditor",
        "when": "config.notebook.navigation.allowNavigateToSurroundingCells && editorTextFocus && inputFocus && notebookEditorFocused && notebookEditorCursorAtBoundary != 'bottom' && notebookEditorCursorAtBoundary != 'none'"
    },
    {
        "key": "up",
        "command": "cursorUp",
        "when": "textInputFocus"
    },
    {
        "key": "up",
        "command": "history.showPrevious",
        "when": "historyNavigationBackwardsEnabled && historyNavigationWidgetFocus && !suggestWidgetVisible"
    },
    {
        "key": "up",
        "command": "interactiveEditor.arrowOutUp",
        "when": "interactiveEditorFocused && interactiveEditorHasProvider && interactiveEditorInnerCursorFirst"
    },
    {
        "key": "up",
        "command": "list.focusUp",
        "when": "listFocus && !inputFocus"
    },
    {
        "key": "up",
        "command": "scm.viewPreviousCommit",
        "when": "scmInputIsInFirstPosition && scmRepository && !suggestWidgetVisible"
    },
    {
        "key": "up",
        "command": "selectPrevSuggestion",
        "when": "suggestWidgetMultipleSuggestions && suggestWidgetVisible && textInputFocus || suggestWidgetVisible && textInputFocus && !suggestWidgetHasFocusedSuggestion"
    },
    {
        "key": "up",
        "command": "workbench.action.interactivePlayground.arrowUp",
        "when": "interactivePlaygroundFocus && !editorTextFocus"
    },
    {
        "key": "up",
        "command": "workbench.banner.focusPreviousAction",
        "when": "bannerFocused"
    },
    {
        "key": "up",
        "command": "workbench.statusBar.focusPrevious",
        "when": "statusBarFocused"
    },
    {
        "key": "alt+j",
        "command": "settings.action.focusTOC",
        "when": "inSettingsEditor && settingRowFocus"
    },
    {
        "key": "alt+j",
        "command": "editor.action.scrollLeftHover",
        "when": "editorHoverFocused"
    },
    {
        "key": "alt+j",
        "command": "breadcrumbs.focusPrevious",
        "when": "breadcrumbsActive && breadcrumbsVisible"
    },
    {
        "key": "alt+j",
        "command": "cursorLeft",
        "when": "textInputFocus"
    },
    {
        "key": "alt+j",
        "command": "list.collapse",
        "when": "listFocus && treeElementCanCollapse && !inputFocus || listFocus && treeElementHasParent && !inputFocus"
    },
    {
        "key": "alt+j",
        "command": "notification.collapse",
        "when": "notificationFocus"
    },
    {
        "key": "alt+j",
        "command": "previousCompressedFolder",
        "when": "explorerViewletCompressedFocus && filesExplorerFocus && foldersViewVisible && !explorerViewletCompressedFirstFocus && !inputFocus"
    },
    {
        "key": "alt+j",
        "command": "workbench.banner.focusPreviousAction",
        "when": "bannerFocused"
    },
    {
        "key": "alt+j",
        "command": "workbench.statusBar.focusPrevious",
        "when": "statusBarFocused"
    },
    {
        "key": "alt+l",
        "command": "notebook.unfold",
        "when": "notebookEditorFocused && !inputFocus && activeEditor == 'workbench.editor.notebook'"
    },
    {
        "key": "alt+l",
        "command": "editor.action.scrollRightHover",
        "when": "editorHoverFocused"
    },
    {
        "key": "alt+l",
        "command": "cursorRight",
        "when": "textInputFocus"
    },
    {
        "key": "alt+l",
        "command": "list.expand",
        "when": "listFocus && treeElementCanExpand && !inputFocus || listFocus && treeElementHasChild && !inputFocus"
    },
    {
        "key": "alt+l",
        "command": "nextCompressedFolder",
        "when": "explorerViewletCompressedFocus && filesExplorerFocus && foldersViewVisible && !explorerViewletCompressedLastFocus && !inputFocus"
    },
    {
        "key": "alt+l",
        "command": "notification.expand",
        "when": "notificationFocus"
    },
    {
        "key": "alt+l",
        "command": "workbench.banner.focusNextAction",
        "when": "bannerFocused"
    },
    {
        "key": "alt+l",
        "command": "workbench.statusBar.focusNext",
        "when": "statusBarFocused"
    },
    {
        "key": "ctrl+k",
        "command": "notebook.focusNextEditor",
        "when": "config.notebook.navigation.allowNavigateToSurroundingCells && editorTextFocus && inputFocus && notebookEditorFocused && notebookEditorCursorAtBoundary != 'none' && notebookEditorCursorAtBoundary != 'top'"
    },
    {
        "key": "alt+k",
        "command": "notebook.focusNextEditor",
        "when": "config.notebook.navigation.allowNavigateToSurroundingCells && notebookCursorNavigationMode && notebookEditorFocused && !notebookCellMarkdownEditMode && notebookCellType == 'markup'"
    },
    {
        "key": "alt+k",
        "command": "editor.action.scrollDownHover",
        "when": "editorHoverFocused"
    },
    {
        "key": "alt+k",
        "command": "breadcrumbs.selectFocused",
        "when": "breadcrumbsActive && breadcrumbsVisible"
    },
    {
        "key": "alt+k",
        "command": "cursorDown",
        "when": "textInputFocus"
    },
    {
        "key": "alt+k",
        "command": "editor.action.selectNextStickyScrollLine",
        "when": "stickyScrollFocused"
    },
    {
        "key": "alt+k",
        "command": "history.showNext",
        "when": "historyNavigationForwardsEnabled && historyNavigationWidgetFocus && !suggestWidgetVisible"
    },
    {
        "key": "k",
        "command": "interactive.history.next",
        "when": "!suggestWidgetVisible && resourceScheme == 'vscode-interactive' && interactiveInputCursorAtBoundary != 'none' && interactiveInputCursorAtBoundary != 'top'"
    },
    {
        "key": "alt+k",
        "command": "interactiveEditor.arrowOutDown",
        "when": "interactiveEditorFocused && interactiveEditorHasProvider && interactiveEditorInnerCursorLast"
    },
    {
        "key": "alt+k",
        "command": "interactiveEditor.focus",
        "when": "editorTextFocus && interactiveEditorVisible && !interactiveEditorFocused && interactiveEditorOuterCursorPosition == 'above'"
    },
    {
        "key": "alt+k",
        "command": "list.focusDown",
        "when": "listFocus && !inputFocus"
    },
    {
        "key": "alt+k",
        "command": "notifications.focusNextToast",
        "when": "notificationFocus && notificationToastsVisible"
    },
    {
        "key": "k",
        "command": "scm.viewNextCommit",
        "when": "scmInputIsInLastPosition && scmRepository && !suggestWidgetVisible"
    },
    {
        "key": "alt+k",
        "command": "selectNextCodeAction",
        "when": "codeActionMenuVisible"
    },
    {
        "key": "alt+k",
        "command": "selectNextSuggestion",
        "when": "suggestWidgetMultipleSuggestions && suggestWidgetVisible && textInputFocus || suggestWidgetVisible && textInputFocus && !suggestWidgetHasFocusedSuggestion"
    },
    {
        "key": "alt+k",
        "command": "settings.action.focusSettingsFile",
        "when": "inSettingsSearch && !suggestWidgetVisible"
    },
    {
        "key": "alt+k",
        "command": "settings.action.focusSettingsFromSearch",
        "when": "inSettingsSearch && !suggestWidgetVisible"
    },
    {
        "key": "alt+k",
        "command": "showNextParameterHint",
        "when": "editorFocus && parameterHintsMultipleSignatures && parameterHintsVisible"
    },
    {
        "key": "alt+k",
        "command": "workbench.action.interactivePlayground.arrowDown",
        "when": "interactivePlaygroundFocus && !editorTextFocus"
    },
    {
        "key": "alt+k",
        "command": "workbench.action.terminal.selectNextSuggestion",
        "when": "terminalFocus && terminalHasBeenCreated && terminalIsOpen && terminalSuggestWidgetVisible || terminalFocus && terminalIsOpen && terminalProcessSupported && terminalSuggestWidgetVisible"
    },
    {
        "key": "alt+k",
        "command": "workbench.banner.focusNextAction",
        "when": "bannerFocused"
    },
    {
        "key": "alt+k",
        "command": "workbench.statusBar.focusNext",
        "when": "statusBarFocused"
    },
    {
        "key": "ctrl+alt+l",
        "command": "-turboConsoleLog.displayLogMessage"
    },
    {
        "key": "ctrl+alt+j",
        "command": "-liveshare.join",
        "when": "liveshare:state != 'Joined' && liveshare:state != 'Shared'"
    },
    {
        "key": "ctrl+alt+j",
        "command": "-code-runner.runByLanguage"
    },
    {
        "key": "alt+b",
        "command": "cursorWordLeft",
        "when": "textInputFocus && !accessibilityModeEnabled"
    },
    {
        "key": "ctrl+win+j",
        "command": "cursorWordLeft",
        "when": "textInputFocus && !accessibilityModeEnabled"
    },
    {
        "key": "alt+w",
        "command": "cursorWordEndRight",
        "when": "textInputFocus && !accessibilityModeEnabled"
    },
    {
        "key": "ctrl+alt+j",
        "command": "list.collapseAll",
        "when": "listFocus && !inputFocus"
    },
    {
        "key": "ctrl+alt+j",
        "command": "breadcrumbs.focusPreviousWithPicker",
        "when": "breadcrumbsActive && breadcrumbsVisible && listFocus && !inputFocus"
    },
    {
        "key": "ctrl+alt+j",
        "command": "breadcrumbs.focusPrevious",
        "when": "breadcrumbsActive && breadcrumbsVisible"
    },
    {
        "key": "ctrl+alt+j",
        "command": "editor.action.inlineSuggest.undo",
        "when": "canUndoInlineSuggestion && !editorReadonly"
    },
    {
        "key": "ctrl+alt+i",
        "command": "search.focus.previousInputBox",
        "when": "inSearchEditor && inputBoxFocus || inputBoxFocus && searchViewletVisible && !searchInputBoxFocus"
    },
    {
        "key": "ctrl+alt+i",
        "command": "scrollLineUp",
        "when": "textInputFocus"
    },
    {
        "key": "ctrl+alt+i",
        "command": "list.scrollUp",
        "when": "listFocus && !inputFocus"
    },
    {
        "key": "ctrl+alt+i",
        "command": "interactiveEditor.previousFromHistory",
        "when": "interactiveEditorFocused && interactiveEditorHasProvider"
    },
    {
        "key": "ctrl+alt+i",
        "command": "workbench.action.terminal.scrollToPreviousCommand",
        "when": "terminalFocus && terminalHasBeenCreated && !accessibilityModeEnabled || terminalFocus && terminalProcessSupported && !accessibilityModeEnabled"
    },
    {
        "key": "ctrl+alt+i",
        "command": "notebook.cell.focusOutOutput",
        "when": "notebookEditorFocused && notebookOutputFocused"
    },
    {
        "key": "ctrl+alt+i",
        "command": "editor.action.goToTopHover",
        "when": "editorHoverFocused"
    },
    {
        "key": "ctrl+alt+i",
        "command": "interactiveSession.action.focus",
        "when": "inInteractiveInput && textInputFocus"
    },
    {
        "key": "ctrl+alt+i",
        "command": "selectPrevSuggestion",
        "when": "suggestWidgetMultipleSuggestions && suggestWidgetVisible && textInputFocus || suggestWidgetVisible && textInputFocus && !suggestWidgetHasFocusedSuggestion"
    },
    {
        "key": "i",
        "command": "selectPrevCodeAction",
        "when": "codeActionMenuVisible"
    },
    {
        "key": "ctrl+alt+k",
        "command": "-code-runner.runCustomCommand"
    },
    {
        "key": "ctrl+alt+i",
        "command": "editor.action.insertCursorAbove",
        "when": "editorTextFocus"
    },
    {
        "key": "ctrl+alt+k",
        "command": "editor.action.insertCursorBelow",
        "when": "editorTextFocus"
    },
    {
        "key": "alt+n",
        "command": "workbench.action.quickOpenNavigateNextInEditorPicker",
        "when": "inEditorsPicker && inQuickOpen"
    },
    {
        "key": "alt+i",
        "command": "notebook.focusPreviousEditor",
        "when": "config.notebook.navigation.allowNavigateToSurroundingCells && editorTextFocus && inputFocus && notebookEditorFocused && notebookEditorCursorAtBoundary != 'bottom' && notebookEditorCursorAtBoundary != 'none'"
    },
    {
        "key": "alt+i",
        "command": "notebook.focusPreviousEditor",
        "when": "config.notebook.navigation.allowNavigateToSurroundingCells && notebookCursorNavigationMode && notebookEditorFocused && !notebookCellMarkdownEditMode && notebookCellType == 'markup'"
    },
    {
        "key": "alt+i",
        "command": "notebook.focusPreviousEditor",
        "when": "config.notebook.navigation.allowNavigateToSurroundingCells && editorTextFocus && inputFocus && notebookEditorFocused && notebookEditorCursorAtBoundary != 'bottom' && notebookEditorCursorAtBoundary != 'none'"
    },
    {
        "key": "alt+i",
        "command": "editor.action.scrollUpHover",
        "when": "editorHoverFocused"
    },
    {
        "key": "ctrl+shift+j",
        "command": "workbench.action.terminal.resizePaneLeft"
    },
    {
        "key": "ctrl+shift+k",
        "command": "workbench.action.terminal.resizePaneDown"
    },
    {
        "key": "ctrl+shift+i",
        "command": "workbench.action.terminal.resizePaneUp",
        "when": "terminal.active && terminalFocus"
    },
    {
        "key": "ctrl+shift+/",
        "command": "workbench.action.toggleMaximizedPanel"
    },
    {
        "key": "ctrl+shift+l",
        "command": "-notes.cycleTaskBackward",
        "when": "editorTextFocus"
    },
    {
        "key": "ctrl+shift+l",
        "command": "workbench.action.terminal.resizePaneRight"
    },
    {
        "key": "ctrl+shift+d",
        "command": "editor.action.selectHighlights",
        "when": "editorFocus"
    },
    {
        "key": "ctrl+shift+l",
        "command": "-editor.action.selectHighlights",
        "when": "editorFocus"
    },
    {
        "key": "ctrl+shift+d",
        "command": "selectAllSearchEditorMatches",
        "when": "inSearchEditor"
    },
    {
        "key": "ctrl+shift+l",
        "command": "-selectAllSearchEditorMatches",
        "when": "inSearchEditor"
    },
    {
        "key": "ctrl+shift+d",
        "command": "addCursorsAtSearchResults",
        "when": "fileMatchOrMatchFocus && searchViewletVisible"
    },
    {
        "key": "ctrl+shift+l",
        "command": "-addCursorsAtSearchResults",
        "when": "fileMatchOrMatchFocus && searchViewletVisible"
    },
    {
        "key": "ctrl+shift+d",
        "command": "-workbench.view.debug",
        "when": "viewContainer.workbench.view.debug.enabled"
    },
    {
        "key": "alt+i",
        "command": "workbench.action.terminal.selectPrevSuggestion",
        "when": "terminalFocus && terminalHasBeenCreated && terminalIsOpen && terminalSuggestWidgetVisible || terminalFocus && terminalIsOpen && terminalProcessSupported && terminalSuggestWidgetVisible"
    },
    {
        "key": "alt+k",
        "command": "workbench.action.terminal.selectNextSuggestion",
        "when": "terminalFocus && terminalHasBeenCreated && terminalIsOpen && terminalSuggestWidgetVisible || terminalFocus && terminalIsOpen && terminalProcessSupported && terminalSuggestWidgetVisible"
    },
    {
        "key": "alt+up",
        "command": "-workbench.action.terminal.focusPreviousPane",
        "when": "terminalFocus && terminalHasBeenCreated || terminalFocus && terminalProcessSupported"
    },
    {
        "key": "alt+left",
        "command": "-workbench.action.terminal.focusPreviousPane",
        "when": "terminalFocus && terminalHasBeenCreated || terminalFocus && terminalProcessSupported"
    },
    {
        "key": "alt+right",
        "command": "-workbench.action.terminal.focusNextPane",
        "when": "terminalFocus && terminalHasBeenCreated || terminalFocus && terminalProcessSupported"
    },
    {
        "key": "alt+down",
        "command": "-workbench.action.terminal.focusNextPane",
        "when": "terminalFocus && terminalHasBeenCreated || terminalFocus && terminalProcessSupported"
    },
    {
        "key": "ctrl+alt+[",
        "command": "deleteAllLeft"
    },
    {
        "key": "ctrl+alt+]",
        "command": "deleteAllRight"
    },
    {
        "key": "tab",
        "command": "insertSnippet",
        "when": "editorTextFocus && hasSnippetCompletions && !editorTabMovesFocus && !inSnippetMode && !hasNextTabstop"
    },
    {
        "key": "tab",
        "command": "-insertSnippet",
        "when": "editorTextFocus && hasSnippetCompletions && !editorTabMovesFocus && !inSnippetMode"
    },
    {
        "key": "tab",
        "command": "acceptSelectedSuggestion",
        "when": "suggestWidgetHasFocusedSuggestion && suggestWidgetVisible && textInputFocus && !hasNextTabstop"
    },
    {
        "key": "tab",
        "command": "-acceptSelectedSuggestion",
        "when": "suggestWidgetHasFocusedSuggestion && suggestWidgetVisible && textInputFocus"
    },
    {
        "key": "alt+i",
        "command": "workbench.action.terminal.selectPrevSuggestion",
        "when": "terminalFocus && terminalHasBeenCreated && terminalIsOpen && terminalSuggestWidgetVisible || terminalFocus && terminalIsOpen && terminalProcessSupported && terminalSuggestWidgetVisible"
    },
    {
        "key": "alt+i",
        "command": "interactiveEditor.focus",
        "when": "editorTextFocus && interactiveEditorVisible && !accessibilityModeEnabled && !interactiveEditorFocused && !isEmbeddedDiffEditor && interactiveEditorOuterCursorPosition == 'below'"
    },
    {
        "key": "alt+i",
        "command": "workbench.action.terminal.selectPrevSuggestion",
        "when": "terminalFocus && terminalHasBeenCreated && terminalIsOpen && terminalSuggestWidgetVisible || terminalFocus && terminalIsOpen && terminalProcessSupported && terminalSuggestWidgetVisible"
    },
    {
        "key": "alt+k",
        "command": "interactiveEditor.focus",
        "when": "editorTextFocus && interactiveEditorVisible && !accessibilityModeEnabled && !interactiveEditorFocused && !isEmbeddedDiffEditor && interactiveEditorOuterCursorPosition == 'above'"
    },
    {
        "key": "alt+k",
        "command": "notebook.focusNextEditor",
        "when": "config.notebook.navigation.allowNavigateToSurroundingCells && inputFocus && interactiveEditorFocused && interactiveEditorInnerCursorLast && notebookEditorFocused && !accessibilityModeEnabled && !isEmbeddedDiffEditor && notebookEditorCursorAtBoundary != 'none' && notebookEditorCursorAtBoundary != 'top'"
    },
    {
        "key": "alt+k",
        "command": "list.focusDown",
        "when": "listFocus && !inputFocus"
    },
    {
        "key": "alt+k",
        "command": "notifications.focusNextToast",
        "when": "notificationFocus && notificationToastsVisible"
    },
    {
        "key": "alt+o",
        "command": "-C_Cpp.SwitchHeaderSource",
        "when": "editorTextFocus && editorLangId == 'c' || editorTextFocus && editorLangId == 'cpp' || editorTextFocus && editorLangId == 'cuda-cpp'"
    },
    {
        "key": "alt+p",
        "command": "-togglePreserveCase",
        "when": "editorFocus"
    },
    {
        "key": "alt+p",
        "command": "-keybindings.editor.toggleSortByPrecedence",
        "when": "inKeybindings"
    },
    {
        "key": "alt+p",
        "command": "-toggleSearchPreserveCase",
        "when": "searchViewletFocus"
    },
    {
        "key": "alt+p",
        "command": "editor.action.smartSelect.expand",
        "when": "editorTextFocus"
    },
    {
        "key": "alt+o",
        "command": "editor.action.smartSelect.shrink",
        "when": "editorTextFocus"
    },
    {
        "key": "alt+]",
        "command": "-editor.action.inlineSuggest.showNext",
        "when": "inlineSuggestionVisible && !editorReadonly"
    },
    {
        "key": "alt+]",
        "command": "editor.action.inlineSuggest.showNext",
        "when": "inlineSuggestionVisible && !editorReadonly"
    },
    {
        "key": "alt+u",
        "command": "workbench.action.moveEditorToNextGroup"
    },
    {
        "key": "alt+y",
        "command": "workbench.action.moveEditorToPreviousGroup"
    },
    {
        "key": "alt+e",
        "command": "editor.action.copyLinesUpAction",
        "when": "editorTextFocus && !editorReadonly"
    },
    {
        "key": "alt+e",
        "command": "notebook.cell.copyUp",
        "when": "notebookEditorFocused && !inputFocus"
    },
    {
        "key": "alt+r",
        "command": "editor.action.moveLinesUpAction",
        "when": "editorTextFocus && !editorReadonly"
    },
    {
        "key": "ctrl+up",
        "command": "editor.action.insertCursorAbove",
        "when": "editorTextFocus"
    },
    {
        "key": "ctrl+down",
        "command": "editor.action.insertCursorBelow",
        "when": "editorTextFocus"
    },
    {
        "key": "ctrl+m",
        "command": "workbench.view.explorer",
        "when": "( !sideBarVisible || ( sideBarVisible && !filesExplorerFocus ) ) && ( terminalFocus || terminalEditorFocus || editorTextFocus || textInputFocus )"
    },
    {
        "key": "ctrl+m",
        "command": "workbench.action.toggleSidebarVisibility",
        "when": "sideBarFocus"
    },
    // {
    // {
    //     "key": "ctrl+m",
    //     "command": "workbench.view.explorer",
    //     "when": "!sideBarVisible"
    // },
    // {
    //     "key": "ctrl+m",
    //     "command": "workbench.view.explorer",
    //     "when": "sideBarVisible && !filesExplorerFocus"
    // },
    // {
    //     "key": "ctrl+m",
    //     "command": "workbench.action.toggleSidebarVisibility",
    //     "when": "filesExplorerFocus"
    // },
    // {
    //     "key": "ctrl+m",
    //     "command": "workbench.action.toggleSidebarVisibility",
    //     "when": "terminal.active || terminal.visible || terminalEditorFocus || terminalFocus || terminalTextSelected || textInputFocus || view.terminal.visible || filesExplorerFocus"
    // },
    {
        "key": "alt+n",
        "command": "workbench.action.previousEditor"
    },
    {
        "key": "alt+n",
        "command": "workbench.action.terminal.focusPrevious",
        "when": "terminalFocus && terminalHasBeenCreated && !terminalEditorFocus || terminalFocus && terminalProcessSupported && !terminalEditorFocus"
    },
    {
        "key": "alt+n",
        "command": "selectPrevPageSuggestion",
        "when": "suggestWidgetMultipleSuggestions && suggestWidgetVisible && textInputFocus || suggestWidgetVisible && textInputFocus && !suggestWidgetHasFocusedSuggestion"
    },
    {
        "key": "alt+n",
        "command": "workbench.action.debug.prevConsole",
        "when": "inDebugRepl"
    },
    {
        "key": "alt+m",
        "command": "workbench.action.debug.nextConsole",
        "when": "inDebugRepl"
    },
    {
        "key": "alt+m",
        "command": "workbench.action.terminal.focusNext",
        "when": "terminalFocus && terminalHasBeenCreated && !terminalEditorFocus || terminalFocus && terminalProcessSupported && !terminalEditorFocus"
    },
    {
        "key": "alt+m",
        "command": "workbench.action.nextEditor"
    },
    {
        "key": "alt+m",
        "command": "selectNextPageSuggestion",
        "when": "suggestWidgetMultipleSuggestions && suggestWidgetVisible && textInputFocus || suggestWidgetVisible && textInputFocus && !suggestWidgetHasFocusedSuggestion"
    },
    {
        "key": "alt+backspace",
        "command": "deleteLeft",
        "when": "textInputFocus"
    },
    {
        "key": "alt+,",
        "command": "cursorWordLeft",
        "when": "textInputFocus && !accessibilityModeEnabled"
    },
    {
        "key": "alt+.",
        "command": "cursorWordEndRight",
        "when": "textInputFocus && !accessibilityModeEnabled"
    },
    {
        "key": "alt+w",
        "command": "-toggleSearchEditorWholeWord",
        "when": "inSearchEditor && searchInputBoxFocus"
    },
    {
        "key": "alt+w",
        "command": "-workbench.action.terminal.toggleFindWholeWord",
        "when": "terminalFindFocused && terminalHasBeenCreated || terminalFindFocused && terminalProcessSupported || terminalFocus && terminalHasBeenCreated || terminalFocus && terminalProcessSupported"
    },
    {
        "key": "alt+w",
        "command": "-toggleFindWholeWord",
        "when": "editorFocus"
    },
    {
        "key": "alt+w",
        "command": "-toggleSearchWholeWord",
        "when": "searchViewletFocus"
    },
    {
        "key": "ctrl+;",
        "command": "editor.action.addSelectionToNextFindMatch",
        "when": "editorFocus"
    },
    {
        "key": "ctrl+d",
        "command": "-editor.action.addSelectionToNextFindMatch",
        "when": "editorFocus"
    },
    {
        "key": "ctrl+shift+d",
        "command": "workbench.view.debug"
    },
    {
        "key": "ctrl+n",
        "command": "-extension.vim_ctrl+n",
        "when": "editorTextFocus && vim.active && vim.use<C-n> && !inDebugRepl || vim.active && vim.use<C-n> && !inDebugRepl && vim.mode == 'CommandlineInProgress' || vim.active && vim.use<C-n> && !inDebugRepl && vim.mode == 'SearchInProgressMode'"
    },
    {
        "key": "tab",
        "command": "selectNextSuggestion",
        "when": "editorTextFocus && suggestWidgetVisible && !inSnippetMode"
    },
    {
        "key": "tab",
        "command": "tab",
        "when": "editorTextFocus && !suggestWidgetVisible && !inSnippetMode"
    },
    {
        "key": "shift+tab",
        "command": "selectPrevSuggestion",
        "when": "editorTextFocus && suggestWidgetVisible && !inSnippetMode"
    },
    {
        "key": "enter",
        "command": "acceptSelectedSuggestion",
        "when": "editorTextFocus && suggestWidgetVisible"
    },
    {
        "key": "right",
        "command": "hideSuggestWidget",
        "when": "editorTextFocus && suggestWidgetVisible"
    },
    {
        "key": "ctrl+space",
        "command": "editor.action.triggerSuggest",
        "when": "editorTextFocus"
    },
    {
        "key": "ctrl+c",
        "command": "leaveSnippet",
        "when": "inSnippetMode && textInputFocus"
    },
    {
        "key": "ctrl+b",
        "when": "editorTextFocus"
    },
    {
        "key": "ctrl+b",
        "command": "-workbench.action.toggleSidebarVisibility"
    },
    {
        "key": "ctrl+b",
        "command": "extension.goto-previous-buffer"
    },
    {
        "key": "ctrl+alt+tab",
        "command": "-extension.goto-previous-buffer"
    },
    {
        "key": "ctrl+q",
        "command": "-workbench.action.quickOpenNavigateNextInViewPicker",
        "when": "inQuickOpen && inViewsPicker"
    },
    {
        "key": "ctrl+q",
        "command": "-workbench.action.quickOpenView"
    },
    {
        "key": "ctrl+q",
        "command": "-extension.vim_winCtrlQ",
        "when": "editorTextFocus && vim.active && vim.use<C-q> && !inDebugRepl"
    }
]
